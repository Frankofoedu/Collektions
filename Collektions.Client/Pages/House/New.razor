@page "/House/New"
@using Collektions.ViewModels
@inject HttpClient Http

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-4 col-sm-6 col-10">
            <EditForm Model="@house" OnValidSubmit="PostHouse">
                <div class="card shadow rounded">
                    <div class="card-header">
                        <h3>Add New House</h3>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrWhiteSpace(msg))
                        {
                            <div class="alert alert-success alert-dismissible">@msg</div>
                        }
                        @if (!string.IsNullOrWhiteSpace(err))
                        {
                            <div class="alert alert-danger alert-dismissible">@err</div>
                        }

                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label>Name</label>
                            <InputText @bind-Value="house.Name" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Address</label>
                            <InputTextArea @bind-Value="house.Address" class="form-control" />
                        </div>
                    </div>
                    <div class="card-footer text-center">
                        <button class="btn btn-primary" type="submit">@((MarkupString)submitBtnText)</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private HouseVM house = new HouseVM();
    private string msg, err;
    private string submitBtnText = "Submit";

    public async Task PostHouse()
    {
        try
        {
            submitBtnText = "<span class='spinner-border spinner-border-sm' role='status' aria-hidden='true'></span> Loading...";

            var uri = Http.BaseAddress.ToString();

            var newHTTP = new HttpClient();
            newHTTP.BaseAddress = new Uri(uri);

            var rtn = await newHTTP.PostAsJsonAsync("api/house", house);
            var rtnHouse = await rtn.Content.ReadFromJsonAsync<HouseVM>();

            msg = $"House {rtnHouse.Name} was added successfully.";
            submitBtnText = "Submit";
        }
        catch (Exception ex)
        {
            //err = $"An error occured when posting house with Name = {house.Name} and address = {house.Address}.";
            err = ex.ToString();
        }
    }
}